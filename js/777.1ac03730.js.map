{"version":3,"file":"js/777.1ac03730.js","mappings":"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","sources":["webpack://zzx/./src/components/codeShow/cs-code.vue","webpack://zzx/./src/components/codeShow/cs-code.vue?629b","webpack://zzx/./src/components/codeShow/cs-title.vue","webpack://zzx/./src/components/codeShow/cs-spanCode.vue","webpack://zzx/./src/view/goBang/component/globalVerification.vue","webpack://zzx/./src/view/goBang/component/globalVerification.vue?3de4","webpack://zzx/./src/view/goBang/component/buildCollapseItem.vue","webpack://zzx/./src/view/goBang/component/buildCollapseItem.vue?2e28","webpack://zzx/./src/components/return-button.vue","webpack://zzx/./src/components/return-button.vue?7c18","webpack://zzx/./src/view/goBang/component/codeShow.vue","webpack://zzx/./src/view/goBang/component/codeShow.vue?a4ef","webpack://zzx/./src/view/goBang/component/goBang.vue","webpack://zzx/./src/view/goBang/component/goBang.vue?2f40","webpack://zzx/./src/view/goBang/component/victoryDialog.vue","webpack://zzx/./src/view/goBang/component/victoryDialog.vue?9d19","webpack://zzx/./src/view/goBang/index.vue"],"sourcesContent":["<template>\n  <div class=\"codeClone\" @mouseover=\"mouseover()\" @mouseout=\"mouseout()\">\n    <button @click=\"copy()\">\n      <span>\n        {{ text }}\n      </span>\n    </button>\n    <pre>{{ props.code }}</pre>\n  </div>\n</template>\n\n<script setup>\nimport { ElMessage } from \"element-plus\";\nimport { ref } from \"vue\";\nimport { defineProps } from \"vue\";\nconst props = defineProps([\"code\", \"type\"]);\nconst text = ref(props.type === \"js\" ? \"js\" : \"模版\");\nconst mouseover = () => {\n  text.value = \"复制\";\n};\nconst mouseout = () => {\n  text.value = props.type === \"js\" ? \"js\" : \"模版\";\n};\nconst copy = async () => {\n  try {\n    await navigator.clipboard.writeText(props.code);\n    ElMessage({\n      message: \"复制成功\",\n      type: \"success\",\n    });\n  } catch (err) {\n    ElMessage.error(err);\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.codeClone {\n  position: relative;\n  margin: 10px 0px;\n  background-color: rgb(27, 27, 27);\n  border-radius: 5px;\n  color: rgb(193, 196, 200);\n  padding: 25px 25px 0 25px;\n  pre {\n    padding: 5px 0 25px 0;\n    overflow-x: auto;\n  }\n  button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 10px;\n    border-radius: 5px;\n    margin: 5px;\n    color: rgba(193, 196, 200, 0.5);\n    background-color: rgb(27, 27, 27);\n    border: none;\n    &:hover {\n      background-color: rgb(75, 75, 75);\n    }\n  }\n}\n</style>\n","import script from \"./cs-code.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./cs-code.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./cs-code.vue?vue&type=style&index=0&id=1b55e312&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1b55e312\"]])\n\nexport default __exports__","import script from \"./cs-title.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./cs-title.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./cs-title.vue?vue&type=style&index=0&id=0d56bcaa&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0d56bcaa\"]])\n\nexport default __exports__","import script from \"./cs-spanCode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./cs-spanCode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./cs-spanCode.vue?vue&type=style&index=0&id=1d5de200&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d5de200\"]])\n\nexport default __exports__","<template>\n  <div class=\"carousel\">\n    <el-carousel :interval=\"3000\" indicator-position=\"none\" height=\"300px\">\n      <el-carousel-item v-for=\"item in ruleImg\" :key=\"item\">\n        <el-image :src=\"item.src\" fit=\"cover\" />\n      </el-carousel-item>\n    </el-carousel>\n  </div>\n  <h4>\n    全局式校验是在棋盘游戏中每次落子之后，对整个棋盘进行检查的方法。它会检查是否有任何五子（或更多）连成一线，这可能会带来胜利。\n  </h4>\n  <h4>这种校验考虑了四种可能的连线方向：</h4>\n  <p>1.横向：棋子沿着左右方向排列。</p>\n  <p>\n    建立一个for循环来递增a的值改变x轴的轨迹 通过限制<cs-spanCode\n      code=\"aArr\"\n    />的长度为5 达到横向验证是否存在5子连珠。\n  </p>\n  <cs-code :code=\"code1\" type=\"js\" />\n  <p>2.纵向：棋子沿着上下方向排列。</p>\n  <p>纵向只需递增y轴就可以实现效果</p>\n  <cs-code :code=\"code2\" type=\"js\" />\n  <p>3.上对角线：棋子沿着从左下到右上方向排列。</p>\n  <p>\n    对角线的校验 需要在1、2的基础上 在内部再次嵌套入一个<cs-spanCode\n      code=\"for\"\n    />达到y轴递增、x轴递减（这边考虑到代码的整洁就从右上到左下，可以共用一个a的值）\n    将<cs-spanCode code=\"for\" />的起始值设置成<cs-spanCode\n      code=\"list.value[i].length - 1\"\n    />实现尾部向前递减\n  </p>\n  <cs-code :code=\"code3\" type=\"js\" />\n  <p>4.下对角线：棋子沿着从左上到右下方向排列。</p>\n  <p>\n    和3不同的是 y、x轴同时递增\n    起始值和1.2相同从0开始（不能直接将a的值同时放入y、x会导致遍历单一\n    无法完全校验）\n  </p>\n  <cs-code :code=\"code4\" type=\"js\" />\n  <h4>校验逻辑</h4>\n  <p>\n    在上面1.2.3.4每次循环过后 都会通过<cs-spanCode\n      code=\"ruleArr(arr);\"\n    />传入数组然后进行验证。\n  </p>\n  <cs-code :code=\"code5\" type=\"js\" />\n  <p>\n    使用<cs-spanCode code=\"every\" />来对<cs-spanCode\n      code=\"arr\"\n    />判断是否全部为相同棋子并且等于落子方棋子\n  </p>\n  <h4>\n    简单来说，每次当一个新棋子放置在棋盘上时，全局式校验就会检查整个棋盘，看是否有五颗相同颜色的棋子连成一线，无论是横线、竖线还是斜线。\n  </h4>\n</template>\n\n<script setup>\nimport { csCode, csSpanCode } from \"@/components/codeShow\";\nimport { defineComponent } from \"vue\";\ndefineComponent({\n  \"cs-code\": csCode,\n  \"cs-spanCode\": csSpanCode,\n});\nconst code1 = `for (let a = 0; a < list.value[i].length - 4; a++) {\n  let aArr = [];\n  for (let number = 0; number < 5; number++) {\n    aArr.push(a + number);\n    arr.push(list.value[i][aArr[number]]);\n  }\n}`;\nconst code2 = `for (let number = 0; number < 5; number++) {\n  aArr.push(a + number);\n  arr.push(list.value[aArr[number]][j]);\n}`;\nconst code3 = `for (let b = list.value[i].length - 1; b > 3; b--) {\n  let bArr = [];\n  for (let number = 0; number < 5; number++) {\n    bArr.push(b - number);\n    arr.push(list.value[aArr[number]][bArr[number]]);\n  }\n}`;\nconst code4 = `for (let b = 0; b < list.value[i].length - 4; b++) {\n  ......\n  bArr.push(b + number);\n  ......\n}`;\nconst code5 = `if (array.every((res) => res === 'X'||'O') {\n  setTimeout(() => victory.value = true, 700);\n}`;\nconst ruleImg = [\n  { src: require(\"../../../assets/codeShow/codeShow1.png\") },\n  { src: require(\"../../../assets/codeShow/codeShow2.png\") },\n  { src: require(\"../../../assets/codeShow/codeShow3.png\") },\n];\n</script>\n\n<style lang=\"less\">\n.carousel {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.el-carousel {\n  width: 310px;\n}\n</style>\n","import script from \"./globalVerification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./globalVerification.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./globalVerification.vue?vue&type=style&index=0&id=61c19f1e&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <cs-title title=\"棋盘搭建\" />\n  <p>\n    创建一个二维数组的方法，数组的尺寸由<cs-spanCode\n      code=\"form.size\"\n    />和<cs-spanCode code=\"maxPx.value\" />决定\n  </p>\n  <cs-code :code=\"code1\" type=\"js\" />\n  <p>\n    先来看一下<cs-spanCode code=\"Array.from()\" />这个函数。<cpanCode\n      code=\"Array.from()\"\n    />方法从一个类似数组或可迭代对象中创建一个新的、浅拷贝的数组实例。这里的<cs-spanCode\n      code=\"{ length: form.size }\"\n    />是一个含有<cs-spanCode code=\"length\" />属性的对象，<cs-spanCode\n      code=\"Array.from()\"\n    />会将其视为数组并创建一个长度为<cs-spanCode code=\"form.size\" />的新数组。\n  </p>\n  <p>\n    <cs-spanCode\n      code=\"Array.from()\"\n    />的第二个参数是一个映射函数，用于对每个元素进行处理。在这里，它返回另一个数组<cs-spanCode\n      code=\"Array(form.size > maxPx.value ? maxPx.value :form.size).fill('')\"\n    />。这个数组的长度由<cs-spanCode\n      code=\"form.size > maxPx.value ?maxPx.value : form.size\"\n    />\n    这个三元运算符决定，即如果<cs-spanCode code=\"form.size\" />大于<cs-spanCode\n      code=\"maxPx.value\"\n    />，则长度为<cs-spanCode code=\"maxPx.value\" /> ，否则为<cs-spanCode\n      code=\"form.size\"\n    />。然后<cs-spanCode code=\".fill('')\" />\n    将数组填充为空字符串。\n  </p>\n</template>\n\n<script setup>\nimport { csCode,csTitle, csSpanCode } from \"@/components/codeShow\";\nimport { defineComponent } from \"vue\";\ndefineComponent({\n  'cs-title':csTitle,\n  'cs-code':csCode,\n  'cs-spanCode':csSpanCode,\n})\nconst code1 = `Array.from({ length: form.size }, () =>\n    Array(form.size > maxPx.value ? maxPx.value : form.size).fill(\"\")\n);`;\n</script>\n\n<style lang=\"less\"></style>\n","import script from \"./buildCollapseItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./buildCollapseItem.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-button\n    type=\"primary\"\n    :round=\"type\"\n    @click=\"goHome()\"\n    :class=\"type ? 'round' : ''\"\n    :icon=\"HomeFilled\"\n  />\n</template>\n\n<script setup>\nimport {HomeFilled} from \"@element-plus/icons-vue\";\nimport { useRouter } from \"vue-router\";\nimport { defineProps } from \"vue\";\ndefineProps([\"type\"]);\nconst router = useRouter();\nconst goHome = () => {\n  router.push(\"/\");\n};\n</script>\n\n<style lang=\"less\">\n.round {\n  margin-left: 5px;\n}\n</style>\n","import script from \"./return-button.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./return-button.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./return-button.vue?vue&type=style&index=0&id=1cd1fd89&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-drawer title=\"逻辑展示\" direction=\"btt\" size=\"75%\">\n    <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n      <el-collapse-item title=\"搭建\" name=\"1\">\n        <buildCollapseItem/>\n      </el-collapse-item>\n      <el-collapse-item title=\"校验\" name=\"2\">\n        <cs-title title=\"规则校验\" />\n        <p>\n          五子棋的胜利规则是：在棋盘上先形成5个或更多相同颜色棋子的直线（水平、垂直或对角线）的一方获胜。因此，我们可以在落子的时候对棋盘进行检查\n          是否在（水平、垂直或对角线）直线上形成了5子连珠。\n        </p>\n        <el-tabs type=\"border-card\">\n          <el-tab-pane label=\"全局式校验\">\n            <globalVerification />\n          </el-tab-pane>\n          <el-tab-pane label=\"八爪鱼校验\">正在开发......</el-tab-pane>\n        </el-tabs>\n      </el-collapse-item>\n      <el-collapse-item title=\"源码\" name=\"3\">\n        仓库：<el-button type=\"primary\" text @click=\"open()\">https://github.com/Zzx244/Zhangzx</el-button>\n      </el-collapse-item>\n    </el-collapse>\n  </el-drawer>\n</template>\n\n<script setup>\nimport { csTitle } from \"@/components/codeShow\";\nimport { globalVerification,buildCollapseItem } from \"@/view/goBang/component\";\nimport { defineComponent } from \"vue\";\ndefineComponent({\n  'cs-title':csTitle,\n})\nconst open = ()=>{\n  window.open('https://github.com/Zzx244/Zhangzx')\n}\n</script>\n\n<style lang=\"less\" scoped>\np {\n  margin: 5px 0;\n  padding: 0 10px;\n}\n</style>\n","import script from \"./codeShow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./codeShow.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./codeShow.vue?vue&type=style&index=0&id=c6aeb81a&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c6aeb81a\"]])\n\nexport default __exports__","<!-- 需求：\n1.三子连珠提示（可选）\n2.五子连珠显示胜利棋子(完成)\n3.校验规则优化 \n4.格子优化 棋子下在交叉线上（完成）\n5.悔棋功能添加（完成）-->\n<template>\n  <div class=\"container\">\n    <!-- 逻辑展示 -->\n    <div class=\"show\">\n      <el-button type=\"primary\" round @click=\"table = true\" :icon=\"Pointer\">\n        逻辑展示\n      </el-button>\n      <code-show v-model=\"table\" />\n      <return-button type=\"round\" />\n    </div>\n    <!-- 下棋提示 -->\n    <div class=\"checkerboardTitle\">\n      <div class=\"prompt\">{{ content[arrayIndex] }}</div>\n      请落子\n      <el-button-group v-if=\"!form.setup\">\n        <el-button type=\"primary\" @click=\"form.setup = true\" :icon=\"View\" />\n        <el-button\n          type=\"primary\"\n          @click=\"regretChess()\"\n          :disabled=\"!regretChessArr.length\"\n          :icon=\"RefreshLeft\"\n        />\n      </el-button-group>\n    </div>\n    <!-- 棋盘 -->\n    <div class=\"checkerboard\">\n      <div v-for=\"(row, i) in list\" :key=\"i\" class=\"row\">\n        <div\n          v-for=\"(call, j) in row\"\n          :key=\"j\"\n          class=\"col\"\n          @click=\"play(i, j)\"\n          :class=\"{\n            col__border: !form.style,\n            col__before: form.style,\n            isHighlihjt: isHighlihjt(i, j),\n          }\"\n        >\n          {{ call }}\n        </div>\n      </div>\n    </div>\n    <!-- 功能按钮 -->\n    <div class=\"function-buttons\" v-if=\"form.setup\">\n      <el-button-group>\n        <el-button type=\"primary\" @click=\"form.setup = false\" :icon=\"Hide\" />\n        <el-button\n          type=\"primary\"\n          @click=\"regretChess()\"\n          :disabled=\"!regretChessArr.length\"\n          :icon=\"RefreshLeft\"\n        />\n        <el-button type=\"primary\" @click=\"length()\" :icon=\"Refresh\" />\n        <el-button type=\"primary\" @click=\"setUp = true\" :icon=\"Setting\" />\n      </el-button-group>\n    </div>\n  </div>\n  <!-- 设置 -->\n  <el-dialog\n    v-model=\"setUp\"\n    title=\"棋盘设置\"\n    width=\"350px\"\n    :close-on-click-modal=\"false\"\n  >\n    <el-form\n      label-width=\"120px\"\n      :model=\"form\"\n      :rules=\"setRule\"\n      ref=\"setFormDataRef\"\n    >\n      <el-form-item label=\"设备详情：\" prop=\"equipment\">\n        <el-radio-group v-model=\"form.equipment\" class=\"ml-4\">\n          <el-radio label=\"mobile\" size=\"large\">移动端</el-radio>\n          <el-radio label=\"pc\" size=\"large\">PC端</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"棋盘大小:\" v-if=\"form.equipment\">\n        <el-select v-model.number=\"form.size\">\n          <el-option value=\"9\" label=\"9\" />\n          <el-option value=\"12\" label=\"12\" />\n          <el-option v-if=\"form.equipment === 'pc'\" value=\"16\" label=\"16\" />\n          <el-option v-if=\"form.equipment === 'pc'\" value=\"25\" label=\"25\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item v-if=\"form.equipment\">\n        <el-checkbox v-model=\"form.setup\" label=\"设置栏\" size=\"large\" />\n        <el-checkbox v-model=\"form.style\" label=\"交叉棋盘\" size=\"large\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submit(setFormDataRef)\"\n          >确定</el-button\n        >\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n  <!-- 胜利提示 -->\n  <victory-dialog\n    :length=\"length\"\n    :content=\"content[(arrayIndex + 1) % 2]\"\n    v-model=\"victory\"\n  />\n</template>\n\n<script setup>\nimport returnButton from \"@/components/return-button\";\nimport { victoryDialog } from \"@/view/goBang/component\";\nimport { defineComponent, onMounted, reactive, ref } from \"vue\";\nimport {\n  Pointer,\n  View,\n  Hide,\n  Setting,\n  RefreshLeft,\n  Refresh,\n} from \"@element-plus/icons-vue\";\nimport codeShow from \"./codeShow.vue\";\ndefineComponent({\n  \"victory-dialog\": victoryDialog,\n  \"code-show\": codeShow,\n  \"return-button\": returnButton,\n});\nconst table = ref(false);\nconst form = reactive({\n  size: 9,\n  equipment: \"\",\n  setup: false,\n  style: false,\n});\nconst setUp = ref(true);\nconst content = [\"X\", \"O\"];\nconst victory = ref(false);\nconst list = ref([]);\nconst maxW = ref();\nconst setRule = {\n  equipment: [{ required: true, message: \"请选择设备类型\", trigger: \"blur\" }],\n};\nconst setFormDataRef = ref();\nlet arrayIndex = 0;\nonMounted(() => {\n  length();\n  maxW.value = Math.round(window.innerWidth / 31 - 2);\n});\n//重置\nconst length = () => {\n  list.value = Array.from({ length: form.size }, () =>\n    Array(form.size > maxW.value ? maxW.value : form.size).fill(\"\")\n  );\n  if (victory.value === true) {\n    victory.value = false;\n  }\n  arrayIndex = 0;\n  regretChessArr.value = [];\n  victoryArr.value = [];\n};\n//落子\nconst play = (i, j) => {\n  if (list.value[i][j] !== \"\") return;\n  list.value[i][j] = content[arrayIndex];\n  arrayIndexRule();\n  rule(i, j);\n  // octopusRule(i, j);\n  //悔棋\n  regretChessArr.value.push({ i, j });\n};\n//下棋方提示\nconst arrayIndexRule = () => {\n  arrayIndex++;\n  if (arrayIndex > 1) {\n    arrayIndex = 0;\n  }\n};\n//悔棋\nconst regretChessArr = ref([]);\nconst regretChess = () => {\n  let chessPieces = regretChessArr.value[regretChessArr.value.length - 1];\n  list.value[chessPieces.i][chessPieces.j] = \"\";\n  regretChessArr.value.pop();\n  arrayIndexRule();\n  victoryArr.value = [];\n};\nconst submit = (res) => {\n  if (!res) return;\n  res.validate((valid, fields) => {\n    if (valid) {\n      length();\n      setUp.value = false;\n    } else {\n      console.log(fields);\n    }\n  });\n};\n/**\n * 第一版教研规则 全棋盘验证 若棋盘过大会影响 内存\n * list.value[i][j] [i]代表y轴 [j]代表x轴\n * 横向判断 纵向判断 左斜/右斜判断\n */\nconst rule = (i, j) => {\n  let arr = [];\n  const ruleArr = (array, y, x) => {\n    if (array.every((res) => res === content[(arrayIndex + 1) % 2])) {\n      setTimeout(() => (victory.value = true), 700);\n      [y, x] = [y, x].map((res) =>\n        Array.isArray(res) ? res : new Array(5).fill(res)\n      );\n      victoryArr.value = y.map((item, i) => {\n        return [item, x[i]];\n      });\n    }\n    arr = [];\n  };\n  for (let a = 0; a < list.value[i].length - 4; a++) {\n    let aArr = [];\n    for (let number = 0; number < 5; number++) {\n      aArr.push(a + number);\n      arr.push(list.value[i][aArr[number]]);\n    }\n    ruleArr(arr, i, aArr);\n    for (let number = 0; number < 5; number++) {\n      aArr.push(a + number);\n      arr.push(list.value[aArr[number]][j]);\n    }\n    ruleArr(arr, aArr, j);\n    for (let b = 0; b < list.value[i].length - 4; b++) {\n      let bArr = [];\n      for (let number = 0; number < 5; number++) {\n        bArr.push(b + number);\n        arr.push(list.value[aArr[number]][bArr[number]]);\n      }\n      ruleArr(arr, aArr, bArr);\n    }\n    for (let b = list.value[i].length - 1; b > 3; b--) {\n      let bArr = [];\n      for (let number = 0; number < 5; number++) {\n        bArr.push(b - number);\n        arr.push(list.value[aArr[number]][bArr[number]]);\n      }\n      ruleArr(arr, aArr, bArr);\n    }\n  }\n};\n/**\n * 第二版教研规则 落子周边判断\n */\n// const octopusRule = (y, x) => {\n//   console.log(y, x);\n//   for (let a = x - 5; a < x + 5; a++) {\n//     if (a < 0) {\n//       continue;\n//     } else if (a > list.value[y].length) {\n//       continue;\n//     }\n//     console.log(\"横轴=>\", y, a);\n//   }\n// };\n\n//显示胜利棋子\nconst victoryArr = ref([]);\nconst isHighlihjt = (i, j) => {\n  return victoryArr.value.some((item) => item[0] === i && item[1] === j);\n};\n</script>\n\n<style lang=\"less\" scoped>\n.checkerboardTitle {\n  font-size: 30px;\n  color: #409eff;\n  margin-bottom: -20px;\n  font-weight: bolder;\n}\n.show {\n  max-width: 350px;\n  width: 80%;\n  display: flex;\n  align-items: start;\n  margin-bottom: 20px;\n}\n.checkerboard {\n  margin: 50px;\n  background-color: aliceblue;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border: 3px solid rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  .row {\n    display: flex;\n    .col {\n      position: relative;\n      width: 30px;\n      height: 30px;\n      line-height: 30px;\n      text-align: center;\n      font-size: 35px;\n      font-weight: bolder;\n    }\n  }\n}\n.col__border {\n  border: 0.5px solid rgba(0, 0, 0, 0.1);\n}\n.col__before {\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  &::before {\n    width: 2px;\n    height: 100%;\n    top: 0;\n    left: 49%;\n  }\n  &::after {\n    height: 2px;\n    width: 100%;\n    left: 0;\n    top: 49%;\n  }\n}\n.prompt {\n  display: inline-flex;\n  width: 25px;\n}\n.function-buttons {\n  position: absolute;\n  bottom: 18%;\n}\n.isHighlihjt {\n  color: red;\n}\n</style>\n","import script from \"./goBang.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./goBang.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./goBang.vue?vue&type=style&index=0&id=3bdc4a70&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bdc4a70\"]])\n\nexport default __exports__","<template>\n  <el-dialog width=\"350px\">\n    <div class=\"title\">恭喜“{{ props.content }}”方胜利!</div>\n    <div class=\"button\">\n      <el-button type=\"primary\" @click=\"props.length()\" :icon=\"Refresh\"/>\n      <return-button />\n    </div>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { Refresh } from \"@element-plus/icons-vue\";\nimport { defineProps, defineComponent } from \"vue\";\nimport returnButton from \"@/components/return-button\";\ndefineComponent({\n  \"return-button\": returnButton,\n});\nconst props = defineProps([\"length\", \"content\"]);\n</script>\n\n<style lang=\"less\" scoped>\n.title {\n  text-align: center;\n  font-size: 20px;\n  font-weight: bolder;\n  color: #409eff;\n}\n.button {\n  display: flex;\n  margin-top: 10px;\n  justify-content: flex-end;\n}\n</style>\n","import script from \"./victoryDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./victoryDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./victoryDialog.vue?vue&type=style&index=0&id=5e94a617&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e94a617\"]])\n\nexport default __exports__","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["props","__props","text","ref","type","mouseover","value","mouseout","copy","async","navigator","clipboard","writeText","code","ElMessage","message","err","error","__exports__","code1","code2","code3","code4","code5","defineComponent","csCode","csSpanCode","ruleImg","src","require","csTitle","router","useRouter","goHome","push","open","window","victoryDialog","codeShow","returnButton","table","form","reactive","size","equipment","setup","style","setUp","content","victory","list","maxW","setRule","required","trigger","setFormDataRef","arrayIndex","onMounted","length","Math","round","innerWidth","Array","from","fill","regretChessArr","victoryArr","play","i","j","arrayIndexRule","rule","regretChess","chessPieces","pop","submit","res","validate","valid","fields","console","log","arr","ruleArr","array","y","x","every","setTimeout","map","isArray","item","a","aArr","number","b","bArr","isHighlihjt","some"],"sourceRoot":""}