"use strict";(self["webpackChunkzzx"]=self["webpackChunkzzx"]||[]).push([[32],{6032:function(e,l,a){a.r(l),a.d(l,{default:function(){return Ue}});var t=a(3396),u=a(4870),o=a(7139),r=a(7178),n={__name:"cs-code",props:["code","type"],setup(e){const l=e,a=(0,u.iH)("js"===l.type?"js":"模版"),n=()=>{a.value="复制"},i=()=>{a.value="js"===l.type?"js":"模版"},s=async()=>{try{await navigator.clipboard.writeText(l.code),(0,r.z8)({message:"复制成功",type:"success"})}catch(e){r.z8.error(e)}};return(e,u)=>((0,t.wg)(),(0,t.iD)("div",{class:"codeClone",onMouseover:u[1]||(u[1]=e=>n()),onMouseout:u[2]||(u[2]=e=>i())},[(0,t._)("button",{onClick:u[0]||(u[0]=e=>s())},[(0,t._)("span",null,(0,o.zw)(a.value),1)]),(0,t._)("pre",null,(0,o.zw)(l.code),1)],32))}},i=a(89);const s=(0,i.Z)(n,[["__scopeId","data-v-1b55e312"]]);var c=s;const d={class:"titleHead"};var m={__name:"cs-title",props:["title"],setup(e){return(l,a)=>((0,t.wg)(),(0,t.iD)("div",d,(0,o.zw)(e.title),1))}};const p=(0,i.Z)(m,[["__scopeId","data-v-0d56bcaa"]]);var v=p;const U={class:"code"};var _={__name:"cs-spanCode",props:["code"],setup(e){return(l,a)=>((0,t.wg)(),(0,t.iD)("pre",U,(0,o.zw)(e.code),1))}};const f=(0,i.Z)(_,[["__scopeId","data-v-1d5de200"]]);var y=f;const b={class:"carousel"},g=(0,t._)("h4",null," 全局式校验是在棋盘游戏中每次落子之后，对整个棋盘进行检查的方法。它会检查是否有任何五子（或更多）连成一线，这可能会带来胜利。 ",-1),k=(0,t._)("h4",null,"这种校验考虑了四种可能的连线方向：",-1),w=(0,t._)("p",null,"1.横向：棋子沿着左右方向排列。",-1),W=(0,t._)("p",null,"2.纵向：棋子沿着上下方向排列。",-1),h=(0,t._)("p",null,"纵向只需递增y轴就可以实现效果",-1),S=(0,t._)("p",null,"3.上对角线：棋子沿着从左下到右上方向排列。",-1),z=(0,t._)("p",null,"4.下对角线：棋子沿着从左上到右下方向排列。",-1),A=(0,t._)("p",null," 和3不同的是 y、x轴同时递增 起始值和1.2相同从0开始（不能直接将a的值同时放入y、x会导致遍历单一 无法完全校验） ",-1),x=(0,t._)("h4",null,"校验逻辑",-1),j=(0,t._)("h4",null," 简单来说，每次当一个新棋子放置在棋盘上时，全局式校验就会检查整个棋盘，看是否有五颗相同颜色的棋子连成一线，无论是横线、竖线还是斜线。 ",-1),C="for (let a = 0; a < list.value[i].length - 4; a++) {\n  let aArr = [a, a + 1, a + 2, a + 3, a + 4];\n  arr = [\n    list.value[i][aArr[0]],\n    list.value[i][aArr[1]],\n    list.value[i][aArr[2]],\n    list.value[i][aArr[3]],\n    list.value[i][aArr[4]],\n  ];\n}",V="arr = [\n      list.value[aArr[0]][j],\n      list.value[aArr[1]][j],\n      list.value[aArr[2]][j],\n      list.value[aArr[3]][j],\n      list.value[aArr[4]][j],\n    ];",q="for (let b = list.value[i].length - 1; b > 3; b--) {\n  let bArra = [b, b - 1, b - 2, b - 3, b - 4];\n  arr = [\n    list.value[aArr[0]][bArra[0]],\n    list.value[aArr[1]][bArra[1]],\n    list.value[aArr[2]][bArra[2]],\n    list.value[aArr[3]][bArra[3]],\n    list.value[aArr[4]][bArra[4]],\n  ];\n}",H="for (let b = 0; b < list.value[i].length - 4; b++) {\n  let bArr = [b, b + 1, b + 2, b + 3, b + 4];\n  ......\n}",D="if (array.every((res) => res === 'X'||'O') {\n  setTimeout(() => victory.value = true, 700);\n}";var Z={__name:"globalVerification",setup(e){(0,t.aZ)({"cs-code":c,"cs-spanCode":y});const l=[{src:a(1946)},{src:a(1738)},{src:a(8234)}];return(e,a)=>{const o=(0,t.up)("el-image"),r=(0,t.up)("el-carousel-item"),n=(0,t.up)("el-carousel");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("div",b,[(0,t.Wm)(n,{interval:3e3,"indicator-position":"none",height:"300px"},{default:(0,t.w5)((()=>[((0,t.wg)(),(0,t.iD)(t.HY,null,(0,t.Ko)(l,(e=>(0,t.Wm)(r,{key:e},{default:(0,t.w5)((()=>[(0,t.Wm)(o,{src:e.src,fit:"cover"},null,8,["src"])])),_:2},1024))),64))])),_:1})]),g,k,w,(0,t._)("p",null,[(0,t.Uk)(" 建立一个for循环来递增a的值改变x轴的轨迹 通过限制"),(0,t.Wm)((0,u.SU)(y),{code:"aArr"}),(0,t.Uk)("的长度为5 达到横向验证是否存在5子连珠。 ")]),(0,t.Wm)((0,u.SU)(c),{code:C,type:"js"}),W,h,(0,t.Wm)((0,u.SU)(c),{code:V,type:"js"}),S,(0,t._)("p",null,[(0,t.Uk)(" 对角线的校验 需要在1、2的基础上 在内部再次嵌套入一个"),(0,t.Wm)((0,u.SU)(y),{code:"for"}),(0,t.Uk)("达到y轴递增、x轴递减（这边考虑到代码的整洁就从右上到左下，可以共用一个a的值） 将"),(0,t.Wm)((0,u.SU)(y),{code:"for"}),(0,t.Uk)("的起始值设置成"),(0,t.Wm)((0,u.SU)(y),{code:"list.value[i].length - 1"}),(0,t.Uk)("实现尾部向前递减 ")]),(0,t.Wm)((0,u.SU)(c),{code:q,type:"js"}),z,A,(0,t.Wm)((0,u.SU)(c),{code:H,type:"js"}),x,(0,t._)("p",null,[(0,t.Uk)(" 在上面1.2.3.4每次循环过后 都会通过"),(0,t.Wm)((0,u.SU)(y),{code:"ruleArr(arr);"}),(0,t.Uk)("传入数组然后进行验证。 ")]),(0,t.Wm)((0,u.SU)(c),{code:D,type:"js"}),(0,t._)("p",null,[(0,t.Uk)(" 使用"),(0,t.Wm)((0,u.SU)(y),{code:"every"}),(0,t.Uk)("来对"),(0,t.Wm)((0,u.SU)(y),{code:"arr"}),(0,t.Uk)("判断是否全部为相同棋子并且等于落子方棋子 ")]),j],64)}}};const P=Z;var Y=P;const I='Array.from({ length: form.size }, () =>\n    Array(form.size > maxPx.value ? maxPx.value : form.size).fill("")\n);';var K={__name:"buildCollapseItem",setup(e){return(0,t.aZ)({"cs-title":v,"cs-code":c,"cs-spanCode":y}),(e,l)=>{const a=(0,t.up)("cpanCode");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t.Wm)((0,u.SU)(v),{title:"棋盘搭建"}),(0,t._)("p",null,[(0,t.Uk)(" 创建一个二维数组的方法，数组的尺寸由"),(0,t.Wm)((0,u.SU)(y),{code:"form.size"}),(0,t.Uk)("和"),(0,t.Wm)((0,u.SU)(y),{code:"maxPx.value"}),(0,t.Uk)("决定 ")]),(0,t.Wm)((0,u.SU)(c),{code:I,type:"js"}),(0,t._)("p",null,[(0,t.Uk)(" 先来看一下"),(0,t.Wm)((0,u.SU)(y),{code:"Array.from()"}),(0,t.Uk)("这个函数。"),(0,t.Wm)(a,{code:"Array.from()"}),(0,t.Uk)("方法从一个类似数组或可迭代对象中创建一个新的、浅拷贝的数组实例。这里的"),(0,t.Wm)((0,u.SU)(y),{code:"{ length: form.size }"}),(0,t.Uk)("是一个含有"),(0,t.Wm)((0,u.SU)(y),{code:"length"}),(0,t.Uk)("属性的对象，"),(0,t.Wm)((0,u.SU)(y),{code:"Array.from()"}),(0,t.Uk)("会将其视为数组并创建一个长度为"),(0,t.Wm)((0,u.SU)(y),{code:"form.size"}),(0,t.Uk)("的新数组。 ")]),(0,t._)("p",null,[(0,t.Wm)((0,u.SU)(y),{code:"Array.from()"}),(0,t.Uk)("的第二个参数是一个映射函数，用于对每个元素进行处理。在这里，它返回另一个数组"),(0,t.Wm)((0,u.SU)(y),{code:"Array(form.size > maxPx.value ? maxPx.value :form.size).fill('')"}),(0,t.Uk)("。这个数组的长度由"),(0,t.Wm)((0,u.SU)(y),{code:"form.size > maxPx.value ?maxPx.value : form.size"}),(0,t.Uk)(" 这个三元运算符决定，即如果"),(0,t.Wm)((0,u.SU)(y),{code:"form.size"}),(0,t.Uk)("大于"),(0,t.Wm)((0,u.SU)(y),{code:"maxPx.value"}),(0,t.Uk)("，则长度为"),(0,t.Wm)((0,u.SU)(y),{code:"maxPx.value"}),(0,t.Uk)(" ，否则为"),(0,t.Wm)((0,u.SU)(y),{code:"form.size"}),(0,t.Uk)("。然后"),(0,t.Wm)((0,u.SU)(y),{code:".fill('')"}),(0,t.Uk)(" 将数组填充为空字符串。 ")])],64)}}};const M=K;var T=M,O=(a(560),a(2748)),N=a(2483),X={__name:"return-button",props:["type"],setup(e){const l=(0,N.tv)(),a=()=>{l.push("/")};return(l,r)=>{const n=(0,t.up)("el-button");return(0,t.wg)(),(0,t.j4)(n,{type:"primary",round:e.type,onClick:r[0]||(r[0]=e=>a()),class:(0,o.C_)(e.type?"round":""),icon:(0,u.SU)(O.Ozs)},null,8,["round","class","icon"])}}};const B=X;var E=B;const F=e=>((0,t.dD)("data-v-330e916b"),e=e(),(0,t.Cn)(),e),G=F((()=>(0,t._)("p",null," 五子棋的胜利规则是：在棋盘上先形成5个或更多相同颜色棋子的直线（水平、垂直或对角线）的一方获胜。因此，我们可以在落子的时候对棋盘进行检查 是否在（水平、垂直或对角线）直线上形成了5子连珠。 ",-1)));var R={__name:"codeShow",setup(e){return(0,t.aZ)({"cs-title":v}),(e,l)=>{const a=(0,t.up)("el-collapse-item"),o=(0,t.up)("el-tab-pane"),r=(0,t.up)("el-tabs"),n=(0,t.up)("el-collapse"),i=(0,t.up)("el-drawer");return(0,t.wg)(),(0,t.j4)(i,{title:"逻辑展示",direction:"btt",size:"75%"},{default:(0,t.w5)((()=>[(0,t.Wm)(n,{modelValue:e.activeNames,"onUpdate:modelValue":l[0]||(l[0]=l=>e.activeNames=l),onChange:e.handleChange},{default:(0,t.w5)((()=>[(0,t.Wm)(a,{title:"搭建",name:"1"},{default:(0,t.w5)((()=>[(0,t.Wm)((0,u.SU)(T))])),_:1}),(0,t.Wm)(a,{title:"校验",name:"2"},{default:(0,t.w5)((()=>[(0,t.Wm)((0,u.SU)(v),{title:"规则校验"}),G,(0,t.Wm)(r,{type:"border-card"},{default:(0,t.w5)((()=>[(0,t.Wm)(o,{label:"全局式校验"},{default:(0,t.w5)((()=>[(0,t.Wm)((0,u.SU)(Y))])),_:1}),(0,t.Wm)(o,{label:"八爪鱼校验"},{default:(0,t.w5)((()=>[(0,t.Uk)("正在开发......")])),_:1})])),_:1})])),_:1})])),_:1},8,["modelValue","onChange"])])),_:1})}}};const J=(0,i.Z)(R,[["__scopeId","data-v-330e916b"]]);var L=J;const Q={class:"container"},$={class:"show"},ee={class:"checkerboardTitle"},le={class:"prompt"},ae={class:"checkerboard"},te=["onClick"],ue={key:0,class:"function-buttons"};var oe={__name:"goBang",setup(e){(0,t.aZ)({"victory-dialog":me,"code-show":L,"return-button":E});const l=(0,u.iH)(!1),a=(0,u.qj)({size:9,equipment:"",setup:!1,style:!1}),r=(0,u.iH)(!0),n=["X","O"],i=(0,u.iH)(!1),s=(0,u.iH)([]),c=(0,u.iH)(),d={equipment:[{required:!0,message:"请选择设备类型",trigger:"blur"}]},m=(0,u.iH)();let p=0;(0,t.bv)((()=>{v(),c.value=Math.round(window.innerWidth/31-2)}));const v=()=>{s.value=Array.from({length:a.size},(()=>Array(a.size>c.value?c.value:a.size).fill(""))),!0===i.value&&(i.value=!1),p=0,f.value=[],k.value=[]},U=(e,l)=>{""===s.value[e][l]&&(s.value[e][l]=n[p],_(),g(e,l),f.value.push({i:e,j:l}))},_=()=>{p++,p>1&&(p=0)},f=(0,u.iH)([]),y=()=>{let e=f.value[f.value.length-1];s.value[e.i][e.j]="",f.value.pop(),_(),k.value=[]},b=e=>{e&&e.validate(((e,l)=>{e?(v(),r.value=!1):console.log(l)}))},g=(e,l)=>{let a=[];const t=(e,l,a)=>{e.every((e=>e===n[(p+1)%2]))&&(setTimeout((()=>i.value=!0),700),[l,a]=[l,a].map((e=>Array.isArray(e)?e:new Array(5).fill(e))),k.value=l.map(((e,l)=>[e,a[l]])),console.log(k.value))};for(let u=0;u<s.value[e].length-4;u++){let o=[u,u+1,u+2,u+3,u+4];a=[s.value[e][o[0]],s.value[e][o[1]],s.value[e][o[2]],s.value[e][o[3]],s.value[e][o[4]]],t(a,e,o),a=[s.value[o[0]][l],s.value[o[1]][l],s.value[o[2]][l],s.value[o[3]][l],s.value[o[4]][l]],t(a,o,l);for(let l=0;l<s.value[e].length-4;l++){let e=[l,l+1,l+2,l+3,l+4];a=[s.value[o[0]][e[0]],s.value[o[1]][e[1]],s.value[o[2]][e[2]],s.value[o[3]][e[3]],s.value[o[4]][e[4]]],t(a,o,e)}for(let l=s.value[e].length-1;l>3;l--){let e=[l,l-1,l-2,l-3,l-4];a=[s.value[o[0]][e[0]],s.value[o[1]][e[1]],s.value[o[2]][e[2]],s.value[o[3]][e[3]],s.value[o[4]][e[4]]],t(a,o,e)}}},k=(0,u.iH)([]),w=(e,l)=>k.value.some((a=>a[0]===e&&a[1]===l));return(e,c)=>{const _=(0,t.up)("el-button"),g=(0,t.up)("el-button-group"),k=(0,t.up)("el-radio"),W=(0,t.up)("el-radio-group"),h=(0,t.up)("el-form-item"),S=(0,t.up)("el-option"),z=(0,t.up)("el-select"),A=(0,t.up)("el-checkbox"),x=(0,t.up)("el-form"),j=(0,t.up)("el-dialog");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("div",Q,[(0,t._)("div",$,[(0,t.Wm)(_,{type:"primary",round:"",onClick:c[0]||(c[0]=e=>l.value=!0),icon:(0,u.SU)(O.gbg)},{default:(0,t.w5)((()=>[(0,t.Uk)(" 逻辑展示 ")])),_:1},8,["icon"]),(0,t.Wm)(L,{modelValue:l.value,"onUpdate:modelValue":c[1]||(c[1]=e=>l.value=e)},null,8,["modelValue"]),(0,t.Wm)((0,u.SU)(E),{type:"round"})]),(0,t._)("div",ee,[(0,t._)("div",le,(0,o.zw)(n[(0,u.SU)(p)]),1),(0,t.Uk)(" 请落子 "),a.setup?(0,t.kq)("",!0):((0,t.wg)(),(0,t.j4)(g,{key:0},{default:(0,t.w5)((()=>[(0,t.Wm)(_,{type:"primary",onClick:c[2]||(c[2]=e=>a.setup=!0),icon:(0,u.SU)(O.G7x)},null,8,["icon"]),(0,t.Wm)(_,{type:"primary",onClick:c[3]||(c[3]=e=>y()),disabled:!f.value.length,icon:(0,u.SU)(O.Ufu)},null,8,["disabled","icon"])])),_:1}))]),(0,t._)("div",ae,[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(s.value,((e,l)=>((0,t.wg)(),(0,t.iD)("div",{key:l,class:"row"},[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(e,((e,u)=>((0,t.wg)(),(0,t.iD)("div",{key:u,class:(0,o.C_)(["col",{col__border:!a.style,col__before:a.style,isHighlihjt:w(l,u)}]),onClick:e=>U(l,u)},(0,o.zw)(e),11,te)))),128))])))),128))]),a.setup?((0,t.wg)(),(0,t.iD)("div",ue,[(0,t.Wm)(g,null,{default:(0,t.w5)((()=>[(0,t.Wm)(_,{type:"primary",onClick:c[4]||(c[4]=e=>a.setup=!1),icon:(0,u.SU)(O.caK)},null,8,["icon"]),(0,t.Wm)(_,{type:"primary",onClick:c[5]||(c[5]=e=>y()),disabled:!f.value.length,icon:(0,u.SU)(O.Ufu)},null,8,["disabled","icon"]),(0,t.Wm)(_,{type:"primary",onClick:c[6]||(c[6]=e=>v()),icon:(0,u.SU)(O.hYj)},null,8,["icon"]),(0,t.Wm)(_,{type:"primary",onClick:c[7]||(c[7]=e=>r.value=!0),icon:(0,u.SU)(O.pEs)},null,8,["icon"])])),_:1})])):(0,t.kq)("",!0)]),(0,t.Wm)(j,{modelValue:r.value,"onUpdate:modelValue":c[13]||(c[13]=e=>r.value=e),title:"棋盘设置",width:"350px","close-on-click-modal":!1},{default:(0,t.w5)((()=>[(0,t.Wm)(x,{"label-width":"120px",model:a,rules:d,ref_key:"setFormDataRef",ref:m},{default:(0,t.w5)((()=>[(0,t.Wm)(h,{label:"设备详情：",prop:"equipment"},{default:(0,t.w5)((()=>[(0,t.Wm)(W,{modelValue:a.equipment,"onUpdate:modelValue":c[8]||(c[8]=e=>a.equipment=e),class:"ml-4"},{default:(0,t.w5)((()=>[(0,t.Wm)(k,{label:"mobile",size:"large"},{default:(0,t.w5)((()=>[(0,t.Uk)("移动端")])),_:1}),(0,t.Wm)(k,{label:"pc",size:"large"},{default:(0,t.w5)((()=>[(0,t.Uk)("PC端")])),_:1})])),_:1},8,["modelValue"])])),_:1}),a.equipment?((0,t.wg)(),(0,t.j4)(h,{key:0,label:"棋盘大小:"},{default:(0,t.w5)((()=>[(0,t.Wm)(z,{modelValue:a.size,"onUpdate:modelValue":c[9]||(c[9]=e=>a.size=e),modelModifiers:{number:!0}},{default:(0,t.w5)((()=>[(0,t.Wm)(S,{value:"9",label:"9"}),(0,t.Wm)(S,{value:"12",label:"12"}),"pc"===a.equipment?((0,t.wg)(),(0,t.j4)(S,{key:0,value:"16",label:"16"})):(0,t.kq)("",!0),"pc"===a.equipment?((0,t.wg)(),(0,t.j4)(S,{key:1,value:"25",label:"25"})):(0,t.kq)("",!0)])),_:1},8,["modelValue"])])),_:1})):(0,t.kq)("",!0),a.equipment?((0,t.wg)(),(0,t.j4)(h,{key:1},{default:(0,t.w5)((()=>[(0,t.Wm)(A,{modelValue:a.setup,"onUpdate:modelValue":c[10]||(c[10]=e=>a.setup=e),label:"设置栏",size:"large"},null,8,["modelValue"]),(0,t.Wm)(A,{modelValue:a.style,"onUpdate:modelValue":c[11]||(c[11]=e=>a.style=e),label:"交叉棋盘",size:"large"},null,8,["modelValue"])])),_:1})):(0,t.kq)("",!0),(0,t.Wm)(h,null,{default:(0,t.w5)((()=>[(0,t.Wm)(_,{type:"primary",onClick:c[12]||(c[12]=e=>b(m.value))},{default:(0,t.w5)((()=>[(0,t.Uk)("确定")])),_:1})])),_:1})])),_:1},8,["model"])])),_:1},8,["modelValue"]),(0,t.Wm)((0,u.SU)(me),{length:v,content:n[((0,u.SU)(p)+1)%2],modelValue:i.value,"onUpdate:modelValue":c[14]||(c[14]=e=>i.value=e)},null,8,["content","modelValue"])],64)}}};const re=(0,i.Z)(oe,[["__scopeId","data-v-29b1f1fe"]]);var ne=re;const ie={class:"title"},se={class:"button"};var ce={__name:"victoryDialog",props:["length","content"],setup(e){(0,t.aZ)({"return-button":E});const l=e;return(e,a)=>{const r=(0,t.up)("el-button"),n=(0,t.up)("el-dialog");return(0,t.wg)(),(0,t.j4)(n,{width:"350px"},{default:(0,t.w5)((()=>[(0,t._)("div",ie,"恭喜“"+(0,o.zw)(l.content)+"”方胜利!",1),(0,t._)("div",se,[(0,t.Wm)(r,{type:"primary",onClick:a[0]||(a[0]=e=>l.length()),icon:(0,u.SU)(O.hYj)},null,8,["icon"]),(0,t.Wm)((0,u.SU)(E))])])),_:1})}}};const de=(0,i.Z)(ce,[["__scopeId","data-v-5e94a617"]]);var me=de,pe={__name:"index",setup(e){return(e,l)=>((0,t.wg)(),(0,t.j4)((0,u.SU)(ne)))}};const ve=pe;var Ue=ve},1946:function(e,l,a){e.exports=a.p+"img/codeShow1.c3330a26.png"},1738:function(e,l,a){e.exports=a.p+"img/codeShow2.aa570944.png"},8234:function(e,l,a){e.exports=a.p+"img/codeShow3.64a01e77.png"}}]);
//# sourceMappingURL=32.a82937f1.js.map